#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.5/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         logstash:514 len 4096 format rfc5424 local2 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor
    option                  redispatch
    retries                 3
    timeout http-request    30s
    timeout queue           2m
    timeout connect         30s
    timeout client          2m
    timeout server          2m
    timeout http-keep-alive 60s
    timeout check           10s
    maxconn                 3000


resolvers clusterdns
   nameserver clusterdns1 192.168.68.10:53
   resolve_retries	3
   timeout retry	5s
   hold valid		10s

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:80
    reqadd X-Forwarded-Proto:\ http

    acl jenkins 	hdr_beg(host)       jenkins
    acl kibana  	hdr_beg(host)       kibana
    acl influxdbweb	hdr_beg(host)       influxdbweb
    acl influxdb	hdr_beg(host)       influxdb
    acl grafana		hdr_beg(host)       grafana

    use_backend jenkins_backend if jenkins
    use_backend kibana_backend if kibana
    use_backend influxdbweb_backend if influxdbweb
    use_backend influxdb_backend if influxdb
    use_backend grafana_backend if grafana


backend kibana_backend
    server  srv1 kibana:80 check resolvers clusterdns
backend jenkins_backend
    server  srv1 jenkins:80 check resolvers clusterdns
backend influxdbweb_backend
    server  srv1 influxdb:8083 check resolvers clusterdns
backend influxdb_backend
    server  srv1 influxdb:8086 check resolvers clusterdns
backend grafana_backend
    server  srv1 monitoring-grafana.kube-system:80 check resolvers clusterdns
